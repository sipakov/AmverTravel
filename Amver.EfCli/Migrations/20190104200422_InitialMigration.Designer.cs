// <auto-generated />
using System;
using Amver.EfCli;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Amver.EfCli.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190104200422_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Amver.Domain.Entities.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<int?>("GuestUserIdId");

                    b.Property<int?>("HostUserIdId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Message");

                    b.Property<DateTime>("MessageDateTime");

                    b.Property<int?>("TripIdId");

                    b.HasKey("Id");

                    b.HasIndex("GuestUserIdId");

                    b.HasIndex("HostUserIdId");

                    b.HasIndex("TripIdId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Amver.Domain.Entities.EndPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameEn");

                    b.Property<string>("NameRus");

                    b.HasKey("Id");

                    b.ToTable("EndPoints");
                });

            modelBuilder.Entity("Amver.Domain.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<int?>("FromId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("ToId");

                    b.Property<int?>("UserIdId");

                    b.Property<int>("VocationTime");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.HasIndex("UserIdId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Amver.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age");

                    b.Property<string>("CityOfResidence");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateOfRegistration");

                    b.Property<string>("Email");

                    b.Property<long?>("FaceBookId");

                    b.Property<string>("FirstName");

                    b.Property<string>("FullName");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsBanned");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Phone");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Amver.Domain.Entities.Conversation", b =>
                {
                    b.HasOne("Amver.Domain.Entities.User", "GuestUserId")
                        .WithMany()
                        .HasForeignKey("GuestUserIdId");

                    b.HasOne("Amver.Domain.Entities.User", "HostUserId")
                        .WithMany()
                        .HasForeignKey("HostUserIdId");

                    b.HasOne("Amver.Domain.Entities.Trip", "TripId")
                        .WithMany()
                        .HasForeignKey("TripIdId");
                });

            modelBuilder.Entity("Amver.Domain.Entities.Trip", b =>
                {
                    b.HasOne("Amver.Domain.Entities.EndPoint", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("Amver.Domain.Entities.EndPoint", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.HasOne("Amver.Domain.Entities.User", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");
                });
#pragma warning restore 612, 618
        }
    }
}
